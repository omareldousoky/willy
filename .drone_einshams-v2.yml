kind: pipeline
type: kubernetes
name: notify-pipeline-start


steps:
- name: notify-start
  image: plugins/slack
  settings:
    channel: drone-notifications
    webhook:
        from_secret: slack_webhook_url
    template: >
      {{#if build.pull }}
        *Build started*: {{ repo.owner }}/{{ repo.name }} - <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
      {{else}}
        *Build started: {{ repo.owner }}/{{ repo.name }} - Build #{{ build.number }}* (type: `{{ build.event }}`)
      {{/if}}
      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
      Author: {{ build.author }}
      <{{ build.link }}|Visit build page ↗>
  when:
    branch:
    - einshams-v2
    event:
      - push

---

kind: pipeline
type: kubernetes
name: unit-test

steps:
- name: type-check
  image: node:12.16.1-alpine
  commands:
  - echo -e "https://nl.alpinelinux.org/alpine/v3.5/main\nhttps://nl.alpinelinux.org/alpine/v3.5/community" > /etc/apk/repositories
  - apk add --no-cache git
  - npm i
  - npm run type-check



trigger:
  branch:
  - einshams-v2
  event:
  - push
  - pull_request

---
kind: pipeline
type: kubernetes
name: PushToEcr

steps:
- name: publish-login
  image: plugins/ecr
  environment:
    REACT_APP_GOOGLE_MAP_KEY:
      from_secret: REACT_APP_GOOGLE_MAP_KEY
  settings:
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    dockerfile: Docker/login.Dockerfile
    mirror: http://docker-cache.fintech.halan.io:7000
    repo: fintech/${DRONE_REPO_NAME}/login
    registry: 624792314775.dkr.ecr.us-east-1.amazonaws.com
    region: us-east-1
    build_args_from_env:
      - REACT_APP_GOOGLE_MAP_KEY
    build_args:
      - API_BASE_URL=https://api.${DRONE_BRANCH}.halan.io
      - REACT_APP_URL=https://mohassel.${DRONE_BRANCH}.halan.io
      - REACT_APP_LOGIN_URL=https://login.${DRONE_BRANCH}.halan.io
      - REACT_APP_DOMAIN=.${DRONE_BRANCH}.halan.io
      - REACT_APP_LTS_SUBDOMAIN=mohassel.${DRONE_BRANCH}.halan.io

    tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_BRANCH}
  when:
    branch:
    - einshams-v2
    event:
    - push



- name: publish-login-cf
  image: plugins/ecr
  environment:
    REACT_APP_GOOGLE_MAP_KEY:
      from_secret: REACT_APP_GOOGLE_MAP_KEY
  settings:
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    dockerfile: Docker/login.Dockerfile
    mirror: http://docker-cache.fintech.halan.io:7000
    repo: fintech/${DRONE_REPO_NAME}/login
    registry: 624792314775.dkr.ecr.us-east-1.amazonaws.com
    region: us-east-1
    build_args_from_env:
      - REACT_APP_GOOGLE_MAP_KEY
    build_args:
      - API_BASE_URL=https://api.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_URL=https://cf.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_LOGIN_URL=https://login.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_DOMAIN=.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_SUBDOMAIN=cf.${DRONE_BRANCH}-cf.halan.io
    tags:
      - ${DRONE_BRANCH}-cf-${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_BRANCH}-cf
  when:
    branch:
    - einshams-v2
    event:
      - push

- name: publish-mohassel
  image: plugins/ecr
  environment:
    REACT_APP_GOOGLE_MAP_KEY:
      from_secret: REACT_APP_GOOGLE_MAP_KEY
  settings:
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    dockerfile: Docker/mohassel.Dockerfile
    mirror: http://docker-cache.fintech.halan.io:7000
    repo: fintech/${DRONE_REPO_NAME}/mohassel
    registry: 624792314775.dkr.ecr.us-east-1.amazonaws.com
    build_args_from_env:
      - REACT_APP_GOOGLE_MAP_KEY
    build_args:
      - API_BASE_URL=https://api.${DRONE_BRANCH}.halan.io
      - REACT_APP_URL=https://mohassel.${DRONE_BRANCH}.halan.io
      - REACT_APP_LOGIN_URL=https://login.${DRONE_BRANCH}.halan.io
      - REACT_APP_DOMAIN=.${DRONE_BRANCH}.halan.io
      - REACT_APP_LTS_SUBDOMAIN=mohassel.${DRONE_BRANCH}.halan.io
    region: us-east-1
    tags:
      - ${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_BRANCH}
  when:
    branch:
    - einshams-v2
    event:
    - push

- name: publish-documents
  image: plugins/ecr
  environment:
    REACT_APP_GOOGLE_MAP_KEY:
      from_secret: REACT_APP_GOOGLE_MAP_KEY
  settings:
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    dockerfile: Docker/documents.Dockerfile
    mirror: http://docker-cache.fintech.halan.io:7000
    repo: fintech/${DRONE_REPO_NAME}/documents
    registry: 624792314775.dkr.ecr.us-east-1.amazonaws.com
    build_args_from_env:
      - REACT_APP_GOOGLE_MAP_KEY
    build_args:
      - API_BASE_URL=https://api.${DRONE_BRANCH}.halan.io
      - REACT_APP_LOGIN_URL=https://login.${DRONE_BRANCH}.halan.io
      - REACT_APP_DOMAIN=.${DRONE_BRANCH}.halan.io
      - REACT_APP_LTS_SUBDOMAIN=documents.${DRONE_BRANCH}.halan.io
      - REACT_APP_DOCUMENTS_URL=documents.${DRONE_BRANCH}.halan.io
    region: us-east-1
    tags:
      - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_BRANCH}
  when:
    branch:
    - einshams-v2
    event:
      - push

- name: publish-cf
  image: plugins/ecr
  environment:
    REACT_APP_GOOGLE_MAP_KEY:
      from_secret: REACT_APP_GOOGLE_MAP_KEY
  settings:
    access_key:
      from_secret: aws_access_key_id
    secret_key:
      from_secret: aws_secret_access_key
    dockerfile: Docker/cf.Dockerfile
    mirror: http://docker-cache.fintech.halan.io:7000
    repo: fintech/${DRONE_REPO_NAME}/cf
    registry: 624792314775.dkr.ecr.us-east-1.amazonaws.com
    build_args_from_env:
      - REACT_APP_GOOGLE_MAP_KEY
    build_args:
      - API_BASE_URL=https://api.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_LOGIN_URL=https://login.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_DOMAIN=.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_SUBDOMAIN=cf.${DRONE_BRANCH}-cf.halan.io
      - REACT_APP_DOCUMENTS_URL=documents.${DRONE_BRANCH}-cf.halan.io
    region: us-east-1
    tags:
      - ${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:8}
      - ${DRONE_BRANCH}
  when:
    branch:
    - einshams-v2
    event:
      - push


depends_on:
  - unit-test

---

kind: pipeline
type: kubernetes
name: kubernetes

steps:
- name: deploy-login
  image: quay.io/honestbee/drone-kubernetes
  settings:
    KUBERNETES_SERVER:
     from_secret: kubernetes_server
    KUBERNETES_TOKEN:
      from_secret: kubernetes_token
    KUBERNETES_CERT:
      from_secret: kubernetes_cert
    namespace: ${DRONE_BRANCH}
    deployment: fe-login
    repo: 624792314775.dkr.ecr.us-east-1.amazonaws.com/fintech/${DRONE_REPO_NAME}/login
    container: fe-login
    tag: "${DRONE_COMMIT_SHA:0:8}"

  when:
    branch:
    - einshams-v2
    event:
      - push

- name: deploy-login-cf
  image: quay.io/honestbee/drone-kubernetes
  settings:
    KUBERNETES_SERVER:
     from_secret: kubernetes_server
    KUBERNETES_TOKEN:
      from_secret: kubernetes_token
    KUBERNETES_CERT:
      from_secret: kubernetes_cert
    namespace: ${DRONE_BRANCH}-cf
    deployment: fe-login
    repo: 624792314775.dkr.ecr.us-east-1.amazonaws.com/fintech/${DRONE_REPO_NAME}/login
    container: fe-login
    tag: "${DRONE_BRANCH}-cf-${DRONE_COMMIT_SHA:0:8}"

  when:
    branch:
    - einshams-v2
    event:
      - push

- name: deploy-mohassel
  image: quay.io/honestbee/drone-kubernetes
  settings:
    KUBERNETES_SERVER:
     from_secret: kubernetes_server
    KUBERNETES_TOKEN:
      from_secret: kubernetes_token
    KUBERNETES_CERT:
      from_secret: kubernetes_cert
    namespace: ${DRONE_BRANCH}
    deployment: fe-mohassel
    repo: 624792314775.dkr.ecr.us-east-1.amazonaws.com/fintech/${DRONE_REPO_NAME}/mohassel
    container: fe-mohassel
    tag: "${DRONE_COMMIT_SHA:0:8}"

  when:
    branch:
    - einshams-v2
    event:
      - push

- name: deploy-documents
  image: quay.io/honestbee/drone-kubernetes
  settings:
    KUBERNETES_SERVER:
     from_secret: kubernetes_server
    KUBERNETES_TOKEN:
      from_secret: kubernetes_token
    KUBERNETES_CERT:
      from_secret: kubernetes_cert
    namespace: ${DRONE_BRANCH}
    deployment: fe-documents
    repo: 624792314775.dkr.ecr.us-east-1.amazonaws.com/fintech/${DRONE_REPO_NAME}/documents
    container: fe-documents
    tag: "${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:8}"

  when:
    branch:
    - einshams-v2
    event:
      - push

- name: deploy-cf
  image: quay.io/honestbee/drone-kubernetes
  settings:
    KUBERNETES_SERVER:
     from_secret: kubernetes_server
    KUBERNETES_TOKEN:
      from_secret: kubernetes_token
    KUBERNETES_CERT:
      from_secret: kubernetes_cert
    namespace: ${DRONE_BRANCH}-cf
    deployment: fe-cf
    repo: 624792314775.dkr.ecr.us-east-1.amazonaws.com/fintech/${DRONE_REPO_NAME}/cf
    container: fe-cf
    tag: "${DRONE_BRANCH}-${DRONE_COMMIT_SHA:0:8}"

  when:
    branch:
    - einshams-v2
    event:
      - push


depends_on:
  - unit-test
  - PushToEcr

---
kind: pipeline
type: kubernetes
name: Endnotify

steps:
- name: notify-end
  image: plugins/slack
  settings:
    channel: drone-notifications
    webhook:
        from_secret: slack_webhook_url
    template: >
      {{#if build.pull }}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}*: {{ repo.owner }}/{{ repo.name }} - <https://github.com/{{ repo.owner }}/{{ repo.name }}/pull/{{ build.pull }}|Pull Request #{{ build.pull }}>
      {{else}}
        *{{#success build.status}}✔{{ else }}✘{{/success}} {{ uppercasefirst build.status }}: {{ repo.owner }}/{{ repo.name }} - Build #{{ build.number }}* (type: `{{ build.event }}`)
      {{/if}}
      Commit: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commit/{{ build.commit }}|{{ truncate build.commit 8 }}>
      Branch: <https://github.com/{{ repo.owner }}/{{ repo.name }}/commits/{{ build.branch }}|{{ build.branch }}>
      Author: {{ build.author }}
      Duration: {{ since build.created }}
      <{{ build.link }}|Visit build page ↗>
  when:
    branch:
    - einshams-v2
    event:
      - push

depends_on:
  - unit-test
  - PushToEcr
  - kubernetes
